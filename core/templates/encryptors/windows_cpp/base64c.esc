int base64_decode_####UUID####(unsigned char* encoded, int length)
{
    printf("\n[-] Hello from Custom b64\n");
    
    // Base64 decoding table
    const unsigned char b64_table[256] = {
        64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
        64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
        64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 62, 64, 64, 64, 63,
        52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 64, 64, 64, 64, 64,
        64,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,
        15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 64, 64, 64, 64, 64,
        64, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
        41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 64, 64, 64, 64,
        64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
        64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
        64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
        64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
        64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
        64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
        64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
        64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64
    };

    // Calculate decoded size
    int padding = 0;
    if (length > 0 && encoded[length-1] == '=') padding++;
    if (length > 1 && encoded[length-2] == '=') padding++;
    int decodedSize = (length * 3) / 4 - padding;

    unsigned char* decoded = (unsigned char*)malloc(decodedSize);
    if (decoded == NULL) {
        printf("[-] Memory allocation failed\n");
        return -1;
    }

    int i = 0, j = 0;
    unsigned char a, b, c, d;
    while (i < length) {
        a = b64_table[encoded[i++]];
        b = b64_table[encoded[i++]];
        c = b64_table[encoded[i++]];
        d = b64_table[encoded[i++]];

        decoded[j++] = (a << 2) | (b >> 4);
        if (c != 64) {
            decoded[j++] = (b << 4) | (c >> 2);
            if (d != 64) {
                decoded[j++] = (c << 6) | d;
            }
        }
    }

    memcpy(encoded, decoded, decodedSize);
    free(decoded);

    return decodedSize;
}